{
    "openapi": "3.0.0",
    "info": {
        "title": "UB Mager API Documentation",
        "description": "API Documentation for UB Mager E-commerce System",
        "contact": {
            "email": "apiubmager@gmail.com"
        },
        "license": {
            "name": "NGINX",
            "url": "https://nginx.org/LICENSE"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Create a new user account",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "phone",
                                    "address"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "User name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "role_id": {
                                        "description": "User role (0=buyer, 1=seller)",
                                        "type": "integer",
                                        "default": 0
                                    },
                                    "phone": {
                                        "description": "User phone number",
                                        "type": "string"
                                    },
                                    "address": {
                                        "description": "User address",
                                        "type": "string"
                                    },
                                    "image": {
                                        "description": "User profile image",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Register Berhasil"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Authenticate user and return access token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "description": "Access token",
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login Berhasil"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many login attempts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Revoke user access token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Berhasil logout"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/verify-email/send": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send email verification OTP",
                "description": "Send OTP to user's email for verification",
                "operationId": "sendEmailVerification",
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Email already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/verify-email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify email with OTP",
                "description": "Verify user's email using OTP",
                "operationId": "verifyEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "otp": {
                                        "description": "OTP code",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send password reset OTP",
                "description": "Send OTP to user's email for password reset",
                "operationId": "forgotPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/forgot-password/verify": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify password reset OTP",
                "description": "Verify OTP and get reset token",
                "operationId": "verifyPasswordResetOtp",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "otp": {
                                        "description": "OTP code",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified, reset token provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "token": {
                                                            "description": "Reset token",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset password",
                "description": "Reset user password using reset token",
                "operationId": "resetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "token"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "New password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "token": {
                                        "description": "Reset token",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/history": {
            "get": {
                "tags": [
                    "History"
                ],
                "summary": "Get user transaction history",
                "description": "Get all transaction history with orders for authenticated user",
                "operationId": "getHistory",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "transaction": {
                                                        "$ref": "#/components/schemas/Transaction"
                                                    },
                                                    "orders": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/Order"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/history/{id}": {
            "get": {
                "tags": [
                    "History"
                ],
                "summary": "Get transaction history detail",
                "description": "Get details of a specific transaction with orders from history",
                "operationId": "getHistoryDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "transaction": {
                                                    "$ref": "#/components/schemas/Transaction"
                                                },
                                                "orders": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Order"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/nego": {
            "get": {
                "tags": [
                    "Negotiation"
                ],
                "summary": "Get user's negotiations",
                "description": "Retrieve all negotiation requests made by the authenticated user",
                "operationId": "myNegos",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter by status (comma-separated)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "pending,accepted"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Negotiations retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Nego"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Negotiation"
                ],
                "summary": "Request price negotiation",
                "description": "Submit a price negotiation request for a product",
                "operationId": "requestNego",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "nego_price"
                                ],
                                "properties": {
                                    "product_id": {
                                        "description": "Product ID",
                                        "type": "integer"
                                    },
                                    "nego_price": {
                                        "description": "Proposed negotiation price",
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Negotiation request created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Nego request created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Nego"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Product not negotiable or validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/nego/{id}": {
            "get": {
                "tags": [
                    "Negotiation"
                ],
                "summary": "Get negotiation details",
                "description": "Retrieve details of a specific negotiation",
                "operationId": "negoDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Negotiation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Negotiation details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Nego"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Negotiation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/nego/cancel/{id}": {
            "get": {
                "tags": [
                    "Negotiation"
                ],
                "summary": "Cancel negotiation",
                "description": "Cancel a negotiation request",
                "operationId": "cancelNego",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Negotiation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Negotiation cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Nego"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot cancel negotiation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/nego-seller": {
            "get": {
                "tags": [
                    "Negotiation"
                ],
                "summary": "Get seller's received negotiations",
                "description": "Retrieve all negotiation requests received by the seller",
                "operationId": "sellerNegos",
                "responses": {
                    "200": {
                        "description": "Seller negotiations retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Nego"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Seller access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/nego-seller/{id}": {
            "get": {
                "tags": [
                    "Negotiation"
                ],
                "summary": "Get seller negotiation details",
                "description": "Retrieve details of a specific negotiation for seller",
                "operationId": "sellerNegoDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Negotiation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Seller negotiation details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Nego"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Seller access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Negotiation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/nego/accept/{id}": {
            "get": {
                "tags": [
                    "Negotiation"
                ],
                "summary": "Accept negotiation",
                "description": "Accept a negotiation request (seller only)",
                "operationId": "acceptNego",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Negotiation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Negotiation accepted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Nego"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Seller access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot accept negotiation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/nego/decline/{id}": {
            "get": {
                "tags": [
                    "Negotiation"
                ],
                "summary": "Decline negotiation",
                "description": "Decline a negotiation request (seller only)",
                "operationId": "declineNego",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Negotiation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Negotiation declined successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Nego"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Seller access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot decline negotiation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get seller orders",
                "description": "Get all orders for products owned by authenticated seller",
                "operationId": "getOrders",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Seller access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/{id}/process": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Process order",
                "description": "Mark order as processed by seller (changes status from processing to proccessed)",
                "operationId": "processOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order processed successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Order is not in processing state",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Seller access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/{id}/finish": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Finish order",
                "description": "Mark order as finished by buyer (changes status from proccessed to finished)",
                "operationId": "finishOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order finished successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order finished successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Order is not in proccessed state",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Buyer access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/product": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get all products",
                "description": "Retrieve all products with optional filtering by type, category, and search query",
                "operationId": "getProducts",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by product type (comma-separated for multiple)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by product category (comma-separated for multiple)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query for product name or owner name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ProductResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Create a new product",
                "description": "Store a newly created product for seller",
                "operationId": "storeProduct",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type",
                                    "category",
                                    "description",
                                    "price",
                                    "image1"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Product name",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Product type",
                                        "type": "string"
                                    },
                                    "category": {
                                        "description": "Product category",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Product description",
                                        "type": "string"
                                    },
                                    "quantity": {
                                        "description": "Product quantity",
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "price": {
                                        "description": "Product price",
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0
                                    },
                                    "status": {
                                        "description": "Product status",
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "unavailable"
                                        ]
                                    },
                                    "image1": {
                                        "description": "Primary product image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "image2": {
                                        "description": "Secondary product image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "image3": {
                                        "description": "Tertiary product image",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/ProductResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Seller access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/product/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get product by ID",
                "description": "Retrieve a specific product by its ID",
                "operationId": "getProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/ProductResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Update a product",
                "description": "Update an existing product (seller only)",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Product name",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Product type",
                                        "type": "string"
                                    },
                                    "category": {
                                        "description": "Product category",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Product description",
                                        "type": "string"
                                    },
                                    "quantity": {
                                        "description": "Product quantity",
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "price": {
                                        "description": "Product price",
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0
                                    },
                                    "status": {
                                        "description": "Product status",
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "unavailable"
                                        ]
                                    },
                                    "image1": {
                                        "description": "Primary product image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "image2": {
                                        "description": "Secondary product image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "image3": {
                                        "description": "Tertiary product image",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/ProductResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Seller access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete a product",
                "description": "Delete an existing product (seller only)",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Seller access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/product-type": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get all product types",
                "description": "Retrieve all available product types",
                "operationId": "getProductTypes",
                "responses": {
                    "200": {
                        "description": "Product types retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/product-category/{type}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get categories by product type",
                "description": "Retrieve all categories for a specific product type",
                "operationId": "getProductCategories",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Product type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rating/{id}": {
            "post": {
                "tags": [
                    "Rating"
                ],
                "summary": "Rate a product",
                "description": "Submit a rating for a product after purchase (order must be finished and not yet rated)",
                "operationId": "storeRating",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "rating"
                                ],
                                "properties": {
                                    "rating": {
                                        "description": "Rating value (1-5)",
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1
                                    },
                                    "comment": {
                                        "description": "Rating comment",
                                        "type": "string"
                                    },
                                    "image": {
                                        "description": "Rating image",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rating submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Rating submitted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Rating"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Order not eligible for rating (not finished, already rated, or not owned by user)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/checkout": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Checkout a product",
                "description": "Process product checkout and create transaction",
                "operationId": "checkout",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "product_id": {
                                        "description": "Product ID",
                                        "type": "integer"
                                    },
                                    "quantity": {
                                        "description": "Quantity to purchase",
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "address": {
                                        "description": "Delivery address",
                                        "type": "string"
                                    },
                                    "nego_id": {
                                        "description": "Negotiation ID if using negotiated price",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Checkout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "transaction": {
                                                    "$ref": "#/components/schemas/Transaction"
                                                },
                                                "payment_url": {
                                                    "description": "Midtrans payment URL",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Insufficient stock or invalid negotiation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get user transactions",
                "description": "Retrieve all transactions for the authenticated user",
                "operationId": "getUserTransactions",
                "responses": {
                    "200": {
                        "description": "Transactions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Transaction"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transaction/{receipt}": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction status",
                "description": "Get transaction status by receipt number",
                "operationId": "getTransactionStatus",
                "parameters": [
                    {
                        "name": "receipt",
                        "in": "path",
                        "description": "Transaction receipt number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Transaction"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transaction/cancel/{id}": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Cancel transaction",
                "description": "Cancel a pending transaction",
                "operationId": "cancelTransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Transaction"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot cancel transaction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/midtrans/notification": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Midtrans payment notification",
                "description": "Handle payment notification from Midtrans",
                "operationId": "midtransNotification",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "order_id": {
                                        "description": "Order ID",
                                        "type": "string"
                                    },
                                    "status_code": {
                                        "description": "Status code",
                                        "type": "string"
                                    },
                                    "transaction_status": {
                                        "description": "Transaction status",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Notification processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/payment/finish": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Payment finish callback",
                "description": "Handle payment finish callback from Midtrans",
                "operationId": "paymentFinish",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "query",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status_code",
                        "in": "query",
                        "description": "Status code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "transaction_status",
                        "in": "query",
                        "description": "Transaction status",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment finish processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get authenticated user profile",
                "description": "Retrieve the profile of the authenticated user",
                "operationId": "getCurrentUser",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID",
                "description": "Retrieve a specific user by their ID",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user profile",
                "description": "Update the authenticated user's profile information",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "User name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "User email (will set status to unverified)",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "phone": {
                                        "description": "User phone number",
                                        "type": "string"
                                    },
                                    "address": {
                                        "description": "User address",
                                        "type": "string"
                                    },
                                    "image": {
                                        "description": "User profile image",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "SuccessResponse": {
                "title": "Success Response",
                "description": "Standard success response wrapper",
                "properties": {
                    "status": {
                        "description": "Response status",
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "description": "Response message",
                        "type": "string",
                        "example": "Operation successful"
                    },
                    "data": {
                        "description": "Response data",
                        "oneOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "FailResponse": {
                "title": "Fail Response",
                "description": "Standard error response wrapper",
                "properties": {
                    "status": {
                        "description": "Response status",
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "description": "Error message",
                        "type": "string",
                        "example": "Operation failed"
                    },
                    "data": {
                        "description": "Additional error data",
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ValidationErrorResponse": {
                "title": "Validation Error Response",
                "description": "Validation error response",
                "properties": {
                    "success": {
                        "description": "Response status",
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "description": "Error message",
                        "type": "string",
                        "example": "Validation error"
                    },
                    "errors": {
                        "description": "Validation errors",
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": "object"
            },
            "Nego": {
                "required": [
                    "user_id",
                    "product_id",
                    "nego_price",
                    "status"
                ],
                "properties": {
                    "id": {
                        "description": "Negotiation ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "description": "User ID who initiated negotiation",
                        "type": "integer"
                    },
                    "product_id": {
                        "description": "Product ID being negotiated",
                        "type": "integer"
                    },
                    "nego_price": {
                        "description": "Negotiated price",
                        "type": "number",
                        "format": "float"
                    },
                    "status": {
                        "description": "Negotiation status",
                        "type": "string",
                        "enum": [
                            "pending",
                            "accepted",
                            "rejected",
                            "cancelled"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "product": {
                        "$ref": "#/components/schemas/ProductResource"
                    }
                },
                "type": "object"
            },
            "Order": {
                "required": [
                    "user_id",
                    "transaction_id",
                    "product_id",
                    "quantity",
                    "total_price",
                    "status"
                ],
                "properties": {
                    "id": {
                        "description": "Order ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "description": "User ID who placed the order",
                        "type": "integer"
                    },
                    "transaction_id": {
                        "description": "Associated transaction ID",
                        "type": "integer"
                    },
                    "product_id": {
                        "description": "Product ID",
                        "type": "integer"
                    },
                    "quantity": {
                        "description": "Order quantity",
                        "type": "integer"
                    },
                    "total_price": {
                        "description": "Total order amount",
                        "type": "number",
                        "format": "float"
                    },
                    "status": {
                        "description": "Order status",
                        "type": "string",
                        "enum": [
                            "pending",
                            "processing",
                            "proccessed",
                            "finished",
                            "cancelled"
                        ]
                    },
                    "address": {
                        "description": "Delivery address",
                        "type": "string"
                    },
                    "is_rated": {
                        "description": "Whether order has been rated",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "transaction": {
                        "$ref": "#/components/schemas/Transaction"
                    },
                    "product": {
                        "$ref": "#/components/schemas/ProductResource"
                    }
                },
                "type": "object"
            },
            "ProductResource": {
                "title": "Product Resource",
                "description": "Product resource representation",
                "properties": {
                    "id": {
                        "description": "Product ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Product name",
                        "type": "string"
                    },
                    "type": {
                        "description": "Product type",
                        "type": "string"
                    },
                    "category": {
                        "description": "Product category",
                        "type": "string"
                    },
                    "description": {
                        "description": "Product description",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "Product quantity",
                        "type": "integer",
                        "minimum": 0
                    },
                    "price": {
                        "description": "Product price",
                        "type": "number",
                        "format": "float",
                        "minimum": 0
                    },
                    "status": {
                        "description": "Product status",
                        "type": "string",
                        "enum": [
                            "available",
                            "unavailable"
                        ]
                    },
                    "owner": {
                        "description": "Name of product owner",
                        "type": "string",
                        "nullable": true
                    },
                    "image1": {
                        "description": "Primary product image URL",
                        "type": "string"
                    },
                    "image2": {
                        "description": "Secondary product image URL",
                        "type": "string",
                        "nullable": true
                    },
                    "image3": {
                        "description": "Tertiary product image URL",
                        "type": "string",
                        "nullable": true
                    },
                    "rating": {
                        "description": "Average product rating",
                        "type": "number",
                        "format": "float"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Rating": {
                "required": [
                    "user_id",
                    "product_id",
                    "rating"
                ],
                "properties": {
                    "id": {
                        "description": "Rating ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "description": "User ID who gave the rating",
                        "type": "integer"
                    },
                    "product_id": {
                        "description": "Product ID being rated",
                        "type": "integer"
                    },
                    "rating": {
                        "description": "Rating value (1-5)",
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1
                    },
                    "comment": {
                        "description": "Rating comment",
                        "type": "string",
                        "nullable": true
                    },
                    "image": {
                        "description": "Rating image URL",
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "product": {
                        "$ref": "#/components/schemas/ProductResource"
                    }
                },
                "type": "object"
            },
            "Transaction": {
                "required": [
                    "user_id",
                    "total_price",
                    "payment_method",
                    "status",
                    "receipt"
                ],
                "properties": {
                    "id": {
                        "description": "Transaction ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "total_price": {
                        "description": "Total transaction price",
                        "type": "number",
                        "format": "float"
                    },
                    "payment_method": {
                        "description": "Payment method",
                        "type": "string"
                    },
                    "status": {
                        "description": "Transaction status",
                        "type": "string",
                        "enum": [
                            "pending",
                            "success",
                            "failed",
                            "cancelled"
                        ]
                    },
                    "receipt": {
                        "description": "Transaction receipt number",
                        "type": "string"
                    },
                    "link_payment": {
                        "description": "Payment link from Midtrans",
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "orders": {
                        "description": "Orders associated with this transaction",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Order"
                        }
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User Resource",
                "description": "User resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St",
                        "nullable": true
                    },
                    "image": {
                        "type": "string",
                        "example": "https://example.com/image.jpg",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "rating": {
                        "description": "Average rating for sellers only",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Login with email and password to get the authentication token",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints for user authentication"
        },
        {
            "name": "History",
            "description": "API Endpoints for transaction history"
        },
        {
            "name": "Negotiation",
            "description": "API Endpoints for price negotiation"
        },
        {
            "name": "Order",
            "description": "API Endpoints for order management"
        },
        {
            "name": "Product",
            "description": "API Endpoints for managing products"
        },
        {
            "name": "Rating",
            "description": "API Endpoints for product rating"
        },
        {
            "name": "Transaction",
            "description": "API Endpoints for transaction management"
        },
        {
            "name": "User",
            "description": "API Endpoints for user management"
        }
    ]
}