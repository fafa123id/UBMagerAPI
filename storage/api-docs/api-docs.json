{
    "openapi": "3.0.0",
    "info": {
        "title": "UB Mager API Documentation",
        "description": "API Documentation for UB Mager E-commerce System",
        "contact": {
            "email": "admin@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get all items in user's cart",
                "description": "Returns a list of all items in the authenticated user's cart",
                "operationId": "getCartItems",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cart retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Cart"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add item to cart",
                "description": "Adds a product to the user's cart",
                "operationId": "addToCart",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "amount"
                                ],
                                "properties": {
                                    "product_id": {
                                        "description": "Product ID to add to cart",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "amount": {
                                        "description": "Quantity to add",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Item added to cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Clear entire cart",
                "description": "Removes all items from the user's cart",
                "operationId": "clearCart",
                "responses": {
                    "200": {
                        "description": "Cart cleared successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All cart deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart/{id}": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get specific cart item",
                "description": "Returns a specific cart item by ID",
                "operationId": "getCartItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cart item ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart item not found"
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update cart item quantity",
                "description": "Updates the quantity of a specific item in the cart",
                "operationId": "updateCartItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cart item ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount"
                                ],
                                "properties": {
                                    "amount": {
                                        "description": "New quantity",
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cart item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required"
                    },
                    "404": {
                        "description": "Cart item not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove item from cart",
                "description": "Removes a specific item from the cart completely",
                "operationId": "removeCartItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cart item ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart item removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cart deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required"
                    },
                    "404": {
                        "description": "Cart item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cart not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart/{id}/add-one": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Increment cart item by one",
                "description": "Increases the quantity of a specific cart item by one",
                "operationId": "incrementCartItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cart item ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart item quantity increased successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required"
                    },
                    "404": {
                        "description": "Cart item not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart/{id}/remove-one": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Decrement cart item by one",
                "description": "Decreases the quantity of a specific cart item by one. If quantity becomes zero, removes the item completely",
                "operationId": "decrementCartItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cart item ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart item quantity decreased or item removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required"
                    },
                    "404": {
                        "description": "Cart item not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/product": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get list of products",
                "description": "Returns list of products with optional filtering by type, category, and search query",
                "operationId": "getProductsList",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by product type(s), comma-separated. Use 'all' for all types",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by product category(ies), comma-separated. Use 'all' for all categories",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Create a new product",
                "description": "Stores a new product in the database",
                "operationId": "storeProduct",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type",
                                    "category",
                                    "description",
                                    "price"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Product Name"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "electronics"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "smartphone"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Product description"
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 599.99
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "unavailable"
                                        ],
                                        "example": "available"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product created successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/product/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get product information",
                "description": "Returns product data for a specific ID",
                "operationId": "getProductById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Update an existing product",
                "description": "Updates a product's information",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Product Name"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "electronics"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "laptop"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated product description"
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 15
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 899.99
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "unavailable"
                                        ],
                                        "example": "available"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product updated successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete product",
                "description": "Deletes a product by ID",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/product-type": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get all product types",
                "description": "Returns a list of all product types available",
                "operationId": "getProductTypes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/product-category/{type}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get product categories by type",
                "description": "Returns a list of product categories for a specific product type",
                "operationId": "getCategoriesByType",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Product type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Authenticates user and returns a token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "1|laravel_sanctum_MQxyqMYMHVkH5OzJAMOFfgdv4nFhSltI4w65eUZH"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login Berhasil"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Destroys the user's current authenticated session and removes tokens",
                "operationId": "logout",
                "responses": {
                    "201": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Berhasil logout"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/verify-email/send": {
            "post": {
                "tags": [
                    "OTP"
                ],
                "summary": "Send OTP for email verification",
                "operationId": "d7251cc7de2a3dbf981dca35afd8ee91",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Failed to send OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to send OTP"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/forgot-password": {
            "post": {
                "tags": [
                    "OTP"
                ],
                "summary": "Send OTP for password reset",
                "operationId": "35dbfa5077e3320b8c56c5432c755fd1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to send OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to send OTP"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Handle an incoming registration request.",
                "operationId": "18235ea6963e661c49bf381065779d6a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "role_id",
                                    "phone"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "role_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+6281234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Register successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Register Berhasil"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email has already been taken."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/forgot-password/verify": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP sent to the user's email to reset password.",
                "operationId": "verifyOtp",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified and token generated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP verified"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "abcdef1234567890"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid OTP or expired OTP.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or OTP Expired"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user password using the reset token.",
                "operationId": "resetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "token"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "newPassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "newPassword123"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "abcdef1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password successfully reset.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Token expired or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Token expired"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found or token not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/new-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Allow authenticated user to change their own password.",
                "operationId": "newPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "old_password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "old_password": {
                                        "type": "string",
                                        "example": "oldPassword123"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "newPassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "newPassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password successfully changed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid old password or token.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/verify-email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify user's email address using OTP.",
                "operationId": "verifyEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified and email status updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP verified"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid OTP or expired OTP.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or OTP Expired"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Cart": {
                "required": [
                    "id",
                    "user_name",
                    "product_name",
                    "product_category",
                    "product_type",
                    "price",
                    "amount",
                    "total_price"
                ],
                "properties": {
                    "id": {
                        "description": "Cart item ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_name": {
                        "description": "Name of the user who owns this cart item",
                        "type": "string"
                    },
                    "product_name": {
                        "description": "Name of the product in cart",
                        "type": "string"
                    },
                    "product_category": {
                        "description": "Category of the product",
                        "type": "string"
                    },
                    "product_type": {
                        "description": "Type of the product",
                        "type": "string"
                    },
                    "price": {
                        "description": "Price of the product",
                        "type": "number",
                        "format": "float"
                    },
                    "amount": {
                        "description": "Quantity of product in cart",
                        "type": "integer"
                    },
                    "total_price": {
                        "description": "Total price (price × amount)",
                        "type": "number",
                        "format": "float"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Product": {
                "required": [
                    "name",
                    "type",
                    "category",
                    "description",
                    "price"
                ],
                "properties": {
                    "id": {
                        "description": "Product ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Product name",
                        "type": "string"
                    },
                    "type": {
                        "description": "Product type",
                        "type": "string"
                    },
                    "category": {
                        "description": "Product category",
                        "type": "string"
                    },
                    "description": {
                        "description": "Product description",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "Product quantity in stock",
                        "type": "integer"
                    },
                    "price": {
                        "description": "Product price",
                        "type": "number",
                        "format": "float"
                    },
                    "status": {
                        "description": "Product availability status",
                        "type": "string",
                        "enum": [
                            "available",
                            "unavailable"
                        ]
                    },
                    "owner": {
                        "description": "Name of product owner",
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Login with email and password to get the authentication token",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Cart",
            "description": "API Endpoints for shopping cart management"
        },
        {
            "name": "Product",
            "description": "API Endpoints for managing products"
        },
        {
            "name": "Authentication",
            "description": "API Endpoints for user authentication"
        },
        {
            "name": "OTP",
            "description": "API Endpoints for sending OTP for verification and password reset"
        }
    ]
}